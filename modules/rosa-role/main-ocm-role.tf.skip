resource "aws_iam_role" "ocm_role" {
  name = "${format("%s-ocm-role",var.CLUSTER_PREFIX)}"
  assume_role_policy = jsonencode(
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "sts:AssumeRole"
      ],
      "Effect": "Allow",
      "Condition": {
        "StringEquals": {
          "sts:ExternalId": "20pk40hSUtsg5UCHKkk8F5Xz0AY"
        }
      },
      "Principal": {
        "AWS": [
          "arn:aws:iam::710019948333:role/RH-Managed-OpenShift-Installer"
        ]
      }
    }
  ]
}
  )

  tags = {
    red-hat-managed = "true"
    rosa_environment = "production"
    rosa_role_prefix = var.CLUSTER_PREFIX
    rosa_role_type = "OCM"
  }
}

resource "aws_iam_policy" "ocm_role_policy" {
  name = "${format("%s-ocm-role-policy",var.CLUSTER_PREFIX)}"
  policy = jsonencode(
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "ec2:DescribeRegions",
        "ec2:DescribeRouteTables",
        "ec2:DescribeInstanceTypeOfferings",
        "iam:GetRole",
        "sts:AssumeRole",
        "sts:AssumeRoleWithWebIdentity",
        "iam:ListRoles",
        "iam:ListRoleTags",
        "iam:GetOpenIDConnectProvider",
        "iam:GetPolicy"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
  )
    tags = {
    red-hat-managed = "true"
    rosa_environment = "production"
    rosa_role_prefix = var.CLUSTER_PREFIX
    rosa_role_type = "OCM"
  }

}

resource "aws_iam_role_policy_attachment" "ocm_role" {
  role       = aws_iam_role.ocm_role.name
  policy_arn = aws_iam_policy.ocm_role_policy.arn
}